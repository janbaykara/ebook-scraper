// Generated by wxt
export {};
declare global {
  const ContentScriptContext: (typeof import('wxt/utils/content-script-context'))['ContentScriptContext'];
  const InvalidMatchPattern: (typeof import('wxt/utils/match-patterns'))['InvalidMatchPattern'];
  const MatchPattern: (typeof import('wxt/utils/match-patterns'))['MatchPattern'];
  const asyncUpdatePageOrder: (typeof import('/Users/dan/Projects/ebook-scraper/components/actions'))['asyncUpdatePageOrder'];
  const browser: (typeof import('wxt/browser'))['browser'];
  const createIframeUi: (typeof import('wxt/utils/content-script-ui/iframe'))['createIframeUi'];
  const createIntegratedUi: (typeof import('wxt/utils/content-script-ui/integrated'))['createIntegratedUi'];
  const createPDF: (typeof import('/Users/dan/Projects/ebook-scraper/components/pdf'))['createPDF'];
  const createShadowRootUi: (typeof import('wxt/utils/content-script-ui/shadow-root'))['createShadowRootUi'];
  const defineAppConfig: (typeof import('wxt/utils/define-app-config'))['defineAppConfig'];
  const defineBackground: (typeof import('wxt/utils/define-background'))['defineBackground'];
  const defineContentScript: (typeof import('wxt/utils/define-content-script'))['defineContentScript'];
  const defineUnlistedScript: (typeof import('wxt/utils/define-unlisted-script'))['defineUnlistedScript'];
  const defineWxtPlugin: (typeof import('wxt/utils/define-wxt-plugin'))['defineWxtPlugin'];
  const deleteBook: (typeof import('/Users/dan/Projects/ebook-scraper/components/actions'))['deleteBook'];
  const extractPageImageURL: (typeof import('/Users/dan/Projects/ebook-scraper/components/utils'))['extractPageImageURL'];
  const fakeBrowser: (typeof import('wxt/testing'))['fakeBrowser'];
  const fetchAsBlob: (typeof import('/Users/dan/Projects/ebook-scraper/components/utils'))['fetchAsBlob'];
  const getActiveTab: (typeof import('/Users/dan/Projects/ebook-scraper/components/utils'))['getActiveTab'];
  const getBook: (typeof import('/Users/dan/Projects/ebook-scraper/components/utils'))['getBook'];
  const getBookURL: (typeof import('/Users/dan/Projects/ebook-scraper/components/utils'))['getBookURL'];
  const getURL: (typeof import('/Users/dan/Projects/ebook-scraper/components/utils'))['getURL'];
  const injectScript: (typeof import('wxt/utils/inject-script'))['injectScript'];
  const move: (typeof import('/Users/dan/Projects/ebook-scraper/components/utils'))['move'];
  const postBookUpdate: (typeof import('/Users/dan/Projects/ebook-scraper/components/actions'))['postBookUpdate'];
  const saveBook: (typeof import('/Users/dan/Projects/ebook-scraper/components/actions'))['saveBook'];
  const savePage: (typeof import('/Users/dan/Projects/ebook-scraper/components/actions'))['savePage'];
  const sites: (typeof import('/Users/dan/Projects/ebook-scraper/components/sites'))['default'];
  const storage: (typeof import('wxt/utils/storage'))['storage'];
  const stripCdnPlugin: (typeof import('/Users/dan/Projects/ebook-scraper/components/stripCdnPlugin'))['stripCdnPlugin'];
  const updatePageAction: (typeof import('/Users/dan/Projects/ebook-scraper/components/actions'))['updatePageAction'];
  const useAppConfig: (typeof import('wxt/utils/app-config'))['useAppConfig'];
  const useCallback: (typeof import('react'))['useCallback'];
  const useContext: (typeof import('react'))['useContext'];
  const useEffect: (typeof import('react'))['useEffect'];
  const useMemo: (typeof import('react'))['useMemo'];
  const useReducer: (typeof import('react'))['useReducer'];
  const useRef: (typeof import('react'))['useRef'];
  const useState: (typeof import('react'))['useState'];
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Browser } from 'wxt/browser';
  import('wxt/browser');
  // @ts-ignore
  export type {
    StorageArea,
    WxtStorage,
    WxtStorageItem,
    StorageItemKey,
    StorageAreaChanges,
    MigrationError,
  } from 'wxt/utils/storage';
  import('wxt/utils/storage');
  // @ts-ignore
  export type { WxtWindowEventMap } from 'wxt/utils/content-script-context';
  import('wxt/utils/content-script-context');
  // @ts-ignore
  export type { IframeContentScriptUi, IframeContentScriptUiOptions } from 'wxt/utils/content-script-ui/iframe';
  import('wxt/utils/content-script-ui/iframe');
  // @ts-ignore
  export type {
    IntegratedContentScriptUi,
    IntegratedContentScriptUiOptions,
  } from 'wxt/utils/content-script-ui/integrated';
  import('wxt/utils/content-script-ui/integrated');
  // @ts-ignore
  export type {
    ShadowRootContentScriptUi,
    ShadowRootContentScriptUiOptions,
  } from 'wxt/utils/content-script-ui/shadow-root';
  import('wxt/utils/content-script-ui/shadow-root');
  // @ts-ignore
  export type {
    ContentScriptUi,
    ContentScriptUiOptions,
    ContentScriptOverlayAlignment,
    ContentScriptAppendMode,
    ContentScriptInlinePositioningOptions,
    ContentScriptOverlayPositioningOptions,
    ContentScriptModalPositioningOptions,
    ContentScriptPositioningOptions,
    ContentScriptAnchoredOptions,
    AutoMountOptions,
    StopAutoMount,
    AutoMount,
  } from 'wxt/utils/content-script-ui/types';
  import('wxt/utils/content-script-ui/types');
  // @ts-ignore
  export type { WxtAppConfig } from 'wxt/utils/define-app-config';
  import('wxt/utils/define-app-config');
  // @ts-ignore
  export type { ScriptPublicPath, InjectScriptOptions } from 'wxt/utils/inject-script';
  import('wxt/utils/inject-script');
  // @ts-ignore
  export type {
    Page,
    Book,
    SaveBook,
    BookWasUpdated,
    ClearBook,
    UpdatePageOrder,
    ScraperMessage,
    MessageResponse,
    LocalStorageData,
  } from '/Users/dan/Projects/ebook-scraper/components/types';
  import('/Users/dan/Projects/ebook-scraper/components/types');
}
